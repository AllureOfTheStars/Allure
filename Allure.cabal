name:           Allure
-- The package version. See the Haskell package versioning policy (PVP)
-- for standards guiding when and how versions should be incremented.
-- http://www.haskell.org/haskellwiki/Package_versioning_policy
-- PVP summary:+-+------- breaking API changes
--             | | +----- non-breaking API additions
--             | | | +--- code changes with no API change
version:       0.5.0.0
synopsis:      Near-future Sci-Fi roguelike and tactical squad game
description:   Allure of the Stars
               is a near-future Sci-Fi roguelike and tactical squad game.
               See the wiki for design notes and contribute.
               .
               <<https://raw.githubusercontent.com/AllureOfTheStars/media/master/screenshot/campaign2.png>>
               .
               Please see the changelog file for recent improvements
               and the issue tracker for short-term plans. Long term goals
               are high replayability and auto-balancing through procedural
               content generation and persistent content modification
               based on player behaviour.
               .
               The game is written using the LambdaHack roguelike game engine
               available at <http://hackage.haskell.org/package/LambdaHack>.
homepage:      http://allureofthestars.com
bug-reports:   http://github.com/AllureOfTheStars/Allure/issues
license:       AGPL-3
license-file:  LICENSE
tested-with:   GHC == 7.6, GHC == 7.8, GHC == 7.10
data-files:    GameDefinition/config.ui.default, GameDefinition/scores,
               GameDefinition/PLAYING.md, README.md, LICENSE, CREDITS,
               CHANGELOG.md
extra-source-files: GameDefinition/MainMenu.ascii, Makefile
author:        Andres Loeh, Mikolaj Konarski and others
maintainer:    Mikolaj Konarski <mikolaj.konarski@funktory.com>
category:      Game
build-type:    Simple
cabal-version: >= 1.10

source-repository head
  type:               git
  location:           git://github.com/AllureOfTheStars/Allure.git

flag release
  description:        prepare for a release (expose, optimize, etc.)
  default:            True
  manual:             True

executable Allure
  hs-source-dirs:     GameDefinition
  main-is:            Main.hs
  other-modules:      Client.UI.Content.KeyKind,
                      Content.CaveKind,
                      Content.ItemKind,
                      Content.ItemKindActor,
                      Content.ItemKindOrgan,
                      Content.ItemKindBlast,
                      Content.ItemKindTemporary,
                      Content.ModeKind,
                      Content.ModeKindPlayer,
                      Content.PlaceKind,
                      Content.RuleKind,
                      Content.TileKind,
                      TieKnot,
                      Paths_Allure
  build-depends:      LambdaHack >= 0.5.0.0 && < 0.5.1.0,
                      template-haskell >= 2.6 && < 3,

                      base       >= 4       && < 5,
                      containers >= 0.5.3.0 && < 1,
                      enummapset-th >= 0.6.0.0 && < 1,
                      filepath   >= 1.2.0.1 && < 2,
                      text       >= 0.11.2.3 && < 2

  default-language:   Haskell2010
  default-extensions: MonoLocalBinds, ScopedTypeVariables, OverloadedStrings
                      BangPatterns, RecordWildCards, NamedFieldPuns
  other-extensions:   TemplateHaskell
  ghc-options:        -Wall -fwarn-orphans -fwarn-tabs -fwarn-incomplete-uni-patterns -fwarn-incomplete-record-updates -fwarn-monomorphism-restriction -fwarn-unrecognised-pragmas
  ghc-options:        -fno-warn-auto-orphans -fno-warn-implicit-prelude
  ghc-options:        -fno-ignore-asserts -funbox-strict-fields
  ghc-options:        -threaded "-with-rtsopts=-C0.005" -rtsopts

  if flag(release)
    ghc-options:      -O2 -fno-ignore-asserts "-with-rtsopts=-N1"
-- TODO: -N

test-suite test
  type:               exitcode-stdio-1.0
  hs-source-dirs:     GameDefinition, test
  main-is:            test.hs
  build-depends:      LambdaHack,
                      template-haskell >= 2.6 && < 3,

                      base       >= 4       && < 5,
                      containers >= 0.5.3.0 && < 1,
                      enummapset-th >= 0.6.0.0 && < 1,
                      filepath   >= 1.2.0.1 && < 2,
                      text       >= 0.11.2.3 && < 2

  default-language:   Haskell2010
  default-extensions: MonoLocalBinds, ScopedTypeVariables, OverloadedStrings
                      BangPatterns, RecordWildCards, NamedFieldPuns
  other-extensions:   TemplateHaskell
  ghc-options:        -Wall -fwarn-orphans -fwarn-tabs -fwarn-incomplete-uni-patterns -fwarn-incomplete-record-updates -fwarn-monomorphism-restriction -fwarn-unrecognised-pragmas
  ghc-options:        -fno-warn-auto-orphans -fno-warn-implicit-prelude
  ghc-options:        -fno-ignore-asserts -funbox-strict-fields
  ghc-options:        -threaded "-with-rtsopts=-C0.005" -rtsopts

  if flag(release)
    ghc-options:      -O2 -fno-ignore-asserts "-with-rtsopts=-N1"
-- TODO: -N
